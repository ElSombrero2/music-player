on:
  release:
    types: [created]

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.37
      - name: Setup Fluent CI
        uses: fluentci-io/setup-fluentci@v1
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
      - name: Installing needed dependencies
        run: brew install protobuf
      - name: Install aarch64-apple-darwin toolchain
        if: matrix.target == 'aarch64-apple-darwin'
        run: rustup target add aarch64-apple-darwin
      - name: Build webui
        run: |
          cd webui/musicplayer
          bun install && bun run build
      - name: Running cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --release --target ${{ matrix.target }}
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../music-player_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.tar.gz music-player
          shasum -a 256 ../../../music-player_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.tar.gz > ../../../music-player_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.tar.gz.sha256
          cd ../../../ && rm -rf target
      - name: Upload release assets
        run: |
          for ext in tar.gz tar.gz.sha256; do
            export FILE=music-player_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.$ext
            fluentci run github_pipeline release_upload
          done
        env:
          TAG: ${{ env.RELEASE_VERSION }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
